install vagrant_1.9.1, VirtualBox-5.1.4-110228-Win 
chek cmd :
>vagrant --version
Vagrant 1.9.1

>vagrant box list

copy disk file from net, install using vagrant

>vagrant box add ubuntu-xenial-base2 D:\Tools\Microservices_tools\xenial-server-cloudimg-amd64-vagrant.box

check using above list command

> vagrant init

> vagrant up

> vagrant ssh

for ssh.exe 
 1. Install gradle-2.13-bin
 2. set path as: set PATH=%PATH%;C:\Program Files\Git\usr\bin;




see Unbuntu installed: see on consol:

D:\training\apMicroservice\vagrant2>vagrant ssh
Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-64-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

-------------------------------------------
go to super user:
unbuntu@puppetmaster2: sudo su   // Login as super user.

> apt-get update    // update the repostry

install docker :
root@puppetmaster2: /home/ubuntu# apt-get update && apt-get install -y docker.io
root@puppetmaster2: /home/ubuntu# docker --version


> cd /vagrant

> nano Vagrantfile // open text editor

>root@puppetmaster2:/home/ubuntu# docker info  //how many boxes

> docker pull hello-world
> docker run hello-world


open in nano editor: for setting configuration:
--------------------------------------------------
nano /etc/apt/apt-conf


Acquire::http::proxy "http://corp\\ddibyana:Db%40cg12345@inpunwbs02-wcg.corp.capgemini.com:8080";
Acquire::https::proxy "http://corp\\ddibyana:Db%40cg12345@inpunwbs02-wcg.corp.capgemini.com:8080";

-------------------------------------------------
Spring Boot: takes care of configuration of app auto with @EnableAutoConfiguration

Use Eclipse with Gradle plugin for developing SpringBoot app.

------------------------------------------------------------------
create spring project using : start.spring.io


===========================================
Create contoller spring boot
------------------------============

/**
 * 
 */
package com.example;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * @author ddibyana
 *
 */
@RestController
public class HelloController {
	
	@RequestMapping("/")
	public String getHello()
	{
		return "Hello from Spring Boot";
	}

}
============================

Crete folder:
D:\dibyanand\vm\with-xenial-ubuntu\JAVA
  keep Dockerfile here
  Create Docker file:

FROM java:8-jre
COPY ./nexus-repo/demo-0.0.1-SNAPSHOT.jar /tmp/demo-0.0.1-SNAPSHOT.jar
CMD ["java","-jar","-Dspring.profiles.active=docker","/tmp/demo-0.0.1-SNAPSHOT.jar"]


deploy jar here...

D:\dibyanand\vm\with-xenial-ubuntu\JAVA\nexus-repo
demo-0.0.1-SNAPSHOT


Build:

root@puppetmaster2:/vagrant/JAVA# docker build -t ftn/hello .

> docker images
>docker ps
> docker ps -a
> docker run -d -p 8080:8080 ftn/hello

> ipconfig

http://172.31.0.202:8080/


--======================================================================================


Copy two project :(D:\tools)
digitalbanking-accountsservice
digitalbanking-screens

Set path:
D:\tools>set JAVA_HOME=C:\Program Files\Java\jdk1.8.0_101
D:\tools>set GRADLE_HOME=D:\tools\gradle-2.13
D:\tools>set path=%JAVA_HOME%\bin;%GRADLE_HOME%\bin


>set http_proxy =http://username:password

Convert Maven project into gradle:

>gradle init


====================================================================================================================================================================================================


Import all project:

utill
core
composite
support



